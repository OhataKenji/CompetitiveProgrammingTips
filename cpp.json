{
  // Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and
  // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
  // same ids are connected.
  // Example:
  // "Print to console": {
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }

  "Template for AtCoder": {
    "prefix": "atcoder",
    "body": [
      "#include <bits/stdc++.h>",
      "typedef long long ll;",
      "#define _GLIBCXX_DEBUG",
      "#define rep(i, n) for (ll i = 0; i < (ll)(n); i++)",
      "#define all(v) v.begin(), v.end()",
      "using namespace std;",
      "using vi = vector<int>;",
      "using vvi = vector<vi>;",
      "const int INF = 1 << 30;",
      "const ll INFll = 1ll << 60;",
      "template <typename T>",
      "bool chmax(T &a, const T& b) {",
      "if (a < b) {",
      "a = b;  // aをbで更新",
      "return true;",
      "}",
      "return false;",
      "}",
      "template <typename T>",
      "bool chmin(T &a, const T& b) {",
      "if (a > b) {",
      "a = b;  // aをbで更新",
      "return true;",
      "}",
      "return false;",
      "}",
      "",
      "int main() {",
      "  $1",
      "  cout << ans << endl;",
      "  return 0;",
      "}"
    ],
    "description": "template for atcoder"
  }
}
